{"version":3,"sources":["context/countryContext.js","hooks/useFetchSumary.js","components/summary.js","components/countrySearcher.js","hooks/useFetchCountries.js","hooks/useFetchData.js","components/chartContainer.js","components/header.js","App.js","index.js"],"names":["CountryContext","createContext","Provider","CountryProvider","Consumer","children","useState","country","setCountry","value","fetchData","setData","setIsLoading","a","fetch","method","headers","data","json","response","SummaryData","rows","isLoading","useContext","useEffect","useFetchSummary","createData","name","quantity","perMillion","population","toLocaleString","Math","round","cases","active","critical","recovered","tests","total","CircularProgress","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","map","row","key","scope","CountrySearcher","countries","setCountries","error","setError","fetchCountries","message","useFetchCountries","options","index","MenuItem","style","paddingLeft","Select","defaultValue","onChange","e","target","id","width","textAlignLast","fontSize","fetchCountryData","setCountryData","date","Date","getTime","dataFetched","push","setDate","getDate","Promise","all","promisedData","toISOString","substring","ChartContainer","countryData","useFetchData","filter","day","daysLabel","actives","label","borderColor","backgroundColor","criticals","hidden","chartData","labels","datasets","deaths","Grid","container","border","justify","alignItems","height","borderRadius","padding","marginBottom","title","display","text","maintainAspectRatio","elements","point","radius","Header","className","icon","faHandPointDown","marginLeft","App","faMapMarkedAlt","marginRight","paddingTop","spacing","item","lg","md","sm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.daae68a7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { createContext, useState } from \"react\";\r\n\r\nlet CountryContext = createContext();\r\nlet { Provider, Consumer } = CountryContext;\r\n\r\nconst CountryProvider = ({ children }) => {\r\n  const [country, setCountry] = useState(\"Chile\");\r\n\r\n  return <Provider value={{ country, setCountry }}>{children}</Provider>;\r\n};\r\n\r\nexport { CountryProvider, Consumer as CountryConsumer, CountryContext };\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { CountryContext } from \"../context/countryContext\";\r\n\r\nexport const useFetchSummary = () => {\r\n  const [data, setData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { country } = useContext(CountryContext);\r\n\r\n  useEffect(() => {\r\n    fetchData(country, setData, setIsLoading);\r\n  }, [country]);\r\n\r\n  return {\r\n    data: data,\r\n    country: country,\r\n    isLoading: isLoading,\r\n  };\r\n};\r\n\r\nconst fetchData = async (country, setData, setIsLoading) => {\r\n  setIsLoading(true);\r\n\r\n  let data = await fetch(\r\n    `https://covid-193.p.rapidapi.com/statistics?country=${country}`,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"8656923db0msh06fbc7dc4818a43p11e5e7jsn94f1442e5d0c\",\r\n      },\r\n    }\r\n  );\r\n  data = await data.json();\r\n  setData(data.response);\r\n  setIsLoading(false);\r\n};\r\n","import React from \"react\";\r\nimport { useFetchSummary } from \"../hooks/useFetchSumary\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst SummaryData = () => {\r\n  const { data, country, isLoading } = useFetchSummary();\r\n\r\n  let rows;\r\n  if (!isLoading) {\r\n    rows = [\r\n      createData(\r\n        \"Population\",\r\n        data[0].population.toLocaleString(),\r\n        Math.round(data[0].population / 1000000).toLocaleString()\r\n      ),\r\n      createData(\r\n        \"Actives\",\r\n        data[0].cases.active.toLocaleString(),\r\n        Math.round(\r\n          (data[0].cases.active * 100000) / data[0].population\r\n        ).toLocaleString()\r\n      ),\r\n      createData(\r\n        \"Critical\",\r\n        data[0].cases.critical.toLocaleString(),\r\n        Math.round(\r\n          (data[0].cases.critical * 100000) / data[0].population\r\n        ).toLocaleString()\r\n      ),\r\n      createData(\r\n        \"Recovered\",\r\n        data[0].cases.recovered.toLocaleString(),\r\n        Math.round(\r\n          (data[0].cases.recovered * 100000) / data[0].population\r\n        ).toLocaleString()\r\n      ),\r\n      createData(\r\n        \"Tests\",\r\n        data[0].tests.total.toLocaleString(),\r\n        Math.round(\r\n          (data[0].tests.total * 100000) / data[0].population\r\n        ).toLocaleString()\r\n      ),\r\n    ];\r\n\r\n    function createData(name, quantity, perMillion) {\r\n      return { name, quantity, perMillion };\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {isLoading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <TableContainer component={Paper}>\r\n          <Table aria-label=\"simple table\">\r\n            <TableHead>\r\n              <TableRow>\r\n                <TableCell>{data[0].country}</TableCell>\r\n                <TableCell align=\"right\">Quantity</TableCell>\r\n                <TableCell align=\"right\">Per Million</TableCell>\r\n              </TableRow>\r\n            </TableHead>\r\n            <TableBody>\r\n              {rows.map((row) => (\r\n                <TableRow key={row.name}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {row.name}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{row.quantity}</TableCell>\r\n                  <TableCell align=\"right\">{row.perMillion}</TableCell>\r\n                </TableRow>\r\n              ))}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      )}{\" \"}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SummaryData;\r\n","import React, { useContext } from \"react\";\r\nimport { CountryContext } from \"../context/countryContext\";\r\nimport { useFetchCountries } from \"../hooks/useFetchCountries\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\n\r\nconst CountrySearcher = () => {\r\n  const { setCountry } = useContext(CountryContext);\r\n  const { countries, isLoading, error } = useFetchCountries();\r\n\r\n  const options = countries.map((country, index) => (\r\n    <MenuItem style={{ paddingLeft: 10 }} key={index} value={country}>\r\n      {country}\r\n    </MenuItem>\r\n  ));\r\n\r\n  const handler = (e) => {\r\n    setCountry(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <Select\r\n      name=\"country\"\r\n      defaultValue=\"Chile\"\r\n      onChange={handler}\r\n      id=\"country\"\r\n      style={{ width: 300, textAlignLast: \"center\", fontSize: 24 }}\r\n    >\r\n      {options}\r\n      {isLoading ? <MenuItem>Cargando...</MenuItem> : null}\r\n    </Select>\r\n  );\r\n};\r\n\r\nexport default CountrySearcher;\r\n","import React, { useState, useEffect } from \"react\";\r\n\r\nexport const useFetchCountries = () => {\r\n  const [countries, setCountries] = useState([\"Chile\"]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  const fetchCountries = async () => {\r\n    try {\r\n      let data = await fetch(\"https://covid-193.p.rapidapi.com/countries\", {\r\n        method: \"GET\",\r\n        headers: {\r\n          \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n          \"x-rapidapi-key\":\r\n            \"8656923db0msh06fbc7dc4818a43p11e5e7jsn94f1442e5d0c\",\r\n        },\r\n      });\r\n      data = await data.json();\r\n      setCountries(data.response);\r\n    } catch (error) {\r\n      setError(error.message);\r\n    }\r\n    setIsLoading(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchCountries();\r\n  }, []);\r\n\r\n  return {\r\n    countries: countries,\r\n    isLoading: isLoading,\r\n    error: error,\r\n  };\r\n};\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { CountryContext } from \"../context/countryContext\";\r\n\r\nexport const useFetchData = () => {\r\n  const [countryData, setCountryData] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const { country } = useContext(CountryContext);\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n    fetchCountryData(country, setCountryData, setIsLoading);\r\n  }, [country]);\r\n  return {\r\n    countryData: countryData,\r\n    country: country,\r\n    isLoading: isLoading,\r\n  };\r\n};\r\n\r\nconst fetchCountryData = async (country, setCountryData, setIsLoading) => {\r\n  let date = new Date(2020, 0, 1);\r\n  let data = [];\r\n  while (date.getTime() <= new Date().getTime()) {\r\n    let dataFetched = fetchData(date, country);\r\n    data.push(dataFetched);\r\n    date.setDate(date.getDate() + 4);\r\n  }\r\n  let promisedData = await Promise.all(data);\r\n  setCountryData(promisedData);\r\n  setIsLoading(false);\r\n};\r\n\r\nconst fetchData = async (date, country) => {\r\n  let data = await fetch(\r\n    `https://covid-193.p.rapidapi.com/history?day=${date\r\n      .toISOString()\r\n      .substring(0, 10)}&country=${country}`,\r\n    {\r\n      method: \"GET\",\r\n      headers: {\r\n        \"x-rapidapi-host\": \"covid-193.p.rapidapi.com\",\r\n        \"x-rapidapi-key\": \"8656923db0msh06fbc7dc4818a43p11e5e7jsn94f1442e5d0c\",\r\n      },\r\n    }\r\n  );\r\n  data = await data.json();\r\n  return data.response;\r\n};\r\n","import React from \"react\";\r\nimport { useFetchData } from \"../hooks/useFetchData\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nconst ChartContainer = () => {\r\n  const { country, countryData, isLoading } = useFetchData();\r\n\r\n  const cleanUndefinedData = countryData.filter((day) => day[0]);\r\n  const data = cleanUndefinedData.map((day) => day[0]);\r\n\r\n  const daysLabel = data.map((data) => data.day);\r\n\r\n  const actives = {\r\n    label: \"actives\",\r\n    data: data.map((data) => data.cases.active),\r\n    borderColor: \"rgba(0,165,165,0.6)\",\r\n    backgroundColor: \"rgba(0,165,165,0.2)\",\r\n  };\r\n  const criticals = {\r\n    label: \"criticals\",\r\n    data: data.map((data) => data.cases.critical),\r\n    borderColor: \"rgba(165,0,165,0.6)\",\r\n    backgroundColor: \"rgba(165,0,165,0.2)\",\r\n  };\r\n  const recovered = {\r\n    label: \"recovered\",\r\n    data: data.map((data) => data.cases.recovered),\r\n    borderColor: \"rgba(0,255,0,0.6)\",\r\n    backgroundColor: \"rgba(0,255,0,0.2)\",\r\n    hidden: true,\r\n  };\r\n  const deaths = {\r\n    label: \"deaths\",\r\n    data: data.map((data) => data.deaths.total),\r\n    borderColor: \"rgba(255,0,0,0.6)\",\r\n    backgroundColor: \"rgba(255,0,0,0.2)\",\r\n  };\r\n  const tests = {\r\n    label: \"tests\",\r\n    data: data.map((data) => data.tests.total),\r\n    borderColor: \"rgba(255,255,0,0.6)\",\r\n    backgroundColor: \"rgba(255,255,0,0.2)\",\r\n    hidden: true,\r\n  };\r\n\r\n  const chartData = {\r\n    labels: daysLabel,\r\n    datasets: [actives, criticals, deaths, recovered, tests],\r\n  };\r\n\r\n  return (\r\n    <Grid\r\n      container\r\n      border={0.1}\r\n      justify=\"center\"\r\n      alignItems=\"center\"\r\n      style={{\r\n        height: 400,\r\n        borderColor: \"black\",\r\n        borderRadius: 10,\r\n        backgroundColor: \"#fafafa\",\r\n        padding: 10,\r\n        marginBottom: 20,\r\n      }}\r\n    >\r\n      {isLoading ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <Line\r\n          data={chartData}\r\n          options={{\r\n            title: {\r\n              display: true,\r\n              text: country,\r\n            },\r\n            maintainAspectRatio: false,\r\n            elements: {\r\n              point: {\r\n                radius: 2,\r\n              },\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default ChartContainer;\r\n","import React from \"react\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport \"../css/app.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faHandPointDown } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <Grid\r\n      className=\"AppHeader\"\r\n      align=\"center\"\r\n      style={{\r\n        width: \"100%\",\r\n      }}\r\n    >\r\n      <h1>Welcome to my App</h1>\r\n      <h5>\r\n        A Timelapse Chart about Coronavirus in <u> every country! </u>\r\n      </h5>\r\n      <h5>\r\n        Check your country{\" \"}\r\n        <FontAwesomeIcon\r\n          icon={faHandPointDown}\r\n          style={{ fontSize: 20, marginLeft: 20 }}\r\n        />\r\n      </h5>\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport SummaryData from \"./components/summary\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { CountryProvider } from \"./context/countryContext\";\r\nimport CountrySearcher from \"./components/countrySearcher\";\r\nimport ChartContainer from \"./components/chartContainer\";\r\nimport Header from \"./components/header\";\r\nimport \"./css/app.css\";\r\nimport { faMapMarkedAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header />\r\n\r\n      <CountryProvider>\r\n        <Grid container justify=\"center\">\r\n          <FontAwesomeIcon\r\n            icon={faMapMarkedAlt}\r\n            style={{ fontSize: 32, marginRight: 10, paddingTop: 2 }}\r\n          />\r\n          <Grid style={{ marginBottom: 40 }}>\r\n            <CountrySearcher />\r\n          </Grid>\r\n        </Grid>\r\n        <Grid container spacing={5} justify=\"center\" alignItems=\"center\">\r\n          <Grid item lg={4} md={5} sm={11} align=\"center\">\r\n            <SummaryData />\r\n          </Grid>\r\n          <Grid align=\"center\" item lg={6} md={5} sm={11}>\r\n            <ChartContainer />\r\n          </Grid>\r\n        </Grid>\r\n      </CountryProvider>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}